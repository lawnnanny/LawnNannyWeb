160cf15a8ae917d7d6fb446f6df75b3b
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.breadcrumb = undefined;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactInlineTransitionGroup = require('react-inline-transition-group');

var _reactInlineTransitionGroup2 = _interopRequireDefault(_reactInlineTransitionGroup);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _semanticUiReact = require('semantic-ui-react');

var _breadcrumb = require('../../styles/breadcrumb');

var _breadcrumb2 = _interopRequireDefault(_breadcrumb);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var returnStatus = function returnStatus(selection, id) {
  if (selection > id) {
    return 'check';
  } else if (selection === id) {
    return 'question';
  } else if (id === 1) {
    return 'wpforms';
  } else if (id === 2) {
    return 'location arrow';
  } else if (id === 3) {
    return 'dollar';
  } else if (id === 4) {
    return 'edit outline';
  }
  return 'cancel';
};
var returnColor = function returnColor(iconColor, id) {
  if (iconColor > id) {
    return 'green';
  } else if (iconColor === id) {
    return 'blue';
  }
  return 'grey';
};
var returnIcon = function returnIcon(icon, id) {
  if (icon > id) {
    return _breadcrumb2.default.finishedIcon;
  } else if (icon === id) {
    return _breadcrumb2.default.currentIcon;
  }
  return _breadcrumb2.default.unfinishedIcon;
};
var returnRightBar = function returnRightBar(bar, id) {
  if (bar > id) {
    return _breadcrumb2.default.rightBarFinished;
  }
  return _breadcrumb2.default.rightBarUnfinished;
};
var returnLeftBar = function returnLeftBar(bar, id) {
  if (bar > id) {
    return _breadcrumb2.default.leftBarFinished;
  }
  return _breadcrumb2.default.leftBarUnfinished;
};
var breadcrumb = exports.breadcrumb = function breadcrumb(props) {
  return _react2.default.createElement(
    _semanticUiReact.Grid,
    { columns: 'equal', style: _breadcrumb2.default.grid },
    _react2.default.createElement(
      _semanticUiReact.Grid.Row,
      { style: _breadcrumb2.default.row },
      _react2.default.createElement(
        _semanticUiReact.Grid.Column,
        { style: _breadcrumb2.default.column },
        _react2.default.createElement(
          _semanticUiReact.Segment,
          { style: _breadcrumb2.default.segment },
          _react2.default.createElement(
            _reactInlineTransitionGroup2.default,
            {
              childrenStyles: {
                base: _breadcrumb2.default.base,
                appear: _breadcrumb2.default.appear,
                enter: _breadcrumb2.default.appear,
                leave: _breadcrumb2.default.leave
              }
            },
            _react2.default.createElement(_semanticUiReact.Icon, {
              style: returnIcon(props.icon, 0),
              circular: true,
              size: 'large',
              color: returnColor(props.iconColor, 0),
              name: returnStatus(props.selection, 0)
            })
          ),
          _react2.default.createElement('div', { style: returnRightBar(props.bar, 0) })
        ),
        _react2.default.createElement(
          _semanticUiReact.Segment,
          { style: _breadcrumb2.default.segment },
          _react2.default.createElement(
            _semanticUiReact.Label,
            { style: _breadcrumb2.default.label },
            'Request'
          )
        )
      ),
      _react2.default.createElement(
        _semanticUiReact.Grid.Column,
        { style: _breadcrumb2.default.column },
        _react2.default.createElement(
          _semanticUiReact.Segment,
          { style: _breadcrumb2.default.segment },
          _react2.default.createElement(_semanticUiReact.Icon, {
            circular: true,
            size: 'large',
            style: returnIcon(props.icon, 1),
            color: returnColor(props.iconColor, 1),
            name: returnStatus(props.selection, 1)
          }),
          _react2.default.createElement('div', { style: returnLeftBar(props.bar, 0) }),
          _react2.default.createElement('div', { style: returnRightBar(props.bar, 1) })
        ),
        _react2.default.createElement(
          _semanticUiReact.Segment,
          { style: _breadcrumb2.default.segment },
          _react2.default.createElement(
            _semanticUiReact.Label,
            { style: _breadcrumb2.default.label },
            'Details'
          )
        )
      ),
      _react2.default.createElement(
        _semanticUiReact.Grid.Column,
        { style: _breadcrumb2.default.column },
        _react2.default.createElement(
          _semanticUiReact.Segment,
          { style: _breadcrumb2.default.segment },
          _react2.default.createElement(_semanticUiReact.Icon, {
            circular: true,
            size: 'large',
            style: returnIcon(props.icon, 2),
            color: returnColor(props.iconColor, 2),
            name: returnStatus(props.selection, 2)
          }),
          _react2.default.createElement('div', { style: returnLeftBar(props.bar, 1) }),
          _react2.default.createElement('div', { style: returnRightBar(props.bar, 2) })
        ),
        _react2.default.createElement(
          _semanticUiReact.Segment,
          { style: _breadcrumb2.default.segment },
          _react2.default.createElement(
            _semanticUiReact.Label,
            { style: _breadcrumb2.default.label },
            'Location'
          )
        )
      ),
      _react2.default.createElement(
        _semanticUiReact.Grid.Column,
        { style: _breadcrumb2.default.column },
        _react2.default.createElement(
          _semanticUiReact.Segment,
          { style: _breadcrumb2.default.segment },
          _react2.default.createElement(_semanticUiReact.Icon, {
            circular: true,
            size: 'large',
            style: returnIcon(props.icon, 3),
            color: returnColor(props.iconColor, 3),
            name: returnStatus(props.selection, 3)
          }),
          _react2.default.createElement('div', { style: returnLeftBar(props.bar, 2) }),
          _react2.default.createElement('div', { style: returnRightBar(props.bar, 3) })
        ),
        _react2.default.createElement(
          _semanticUiReact.Segment,
          { style: _breadcrumb2.default.segment },
          _react2.default.createElement(
            _semanticUiReact.Label,
            { style: _breadcrumb2.default.label },
            'Price'
          )
        )
      ),
      _react2.default.createElement(
        _semanticUiReact.Grid.Column,
        { style: _breadcrumb2.default.column },
        _react2.default.createElement(
          _semanticUiReact.Segment,
          { style: _breadcrumb2.default.segment },
          _react2.default.createElement(_semanticUiReact.Icon, {
            circular: true,
            size: 'large',
            style: returnIcon(props.icon, 4),
            color: returnColor(props.iconColor, 4),
            name: returnStatus(props.selection, 4)
          }),
          _react2.default.createElement('div', { style: returnLeftBar(props.bar, 3) })
        ),
        _react2.default.createElement(
          _semanticUiReact.Segment,
          { style: _breadcrumb2.default.segment },
          _react2.default.createElement(
            _semanticUiReact.Label,
            { style: _breadcrumb2.default.label },
            'Review'
          )
        )
      )
    )
  );
};

breadcrumb.propTypes = {
  activeStep: _propTypes2.default.number.isRequired
};

exports.default = breadcrumb;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJyZWFkY3J1bWIuanMiXSwibmFtZXMiOlsicmV0dXJuU3RhdHVzIiwic2VsZWN0aW9uIiwiaWQiLCJyZXR1cm5Db2xvciIsImljb25Db2xvciIsInJldHVybkljb24iLCJpY29uIiwiU3R5bGVzIiwiZmluaXNoZWRJY29uIiwiY3VycmVudEljb24iLCJ1bmZpbmlzaGVkSWNvbiIsInJldHVyblJpZ2h0QmFyIiwiYmFyIiwicmlnaHRCYXJGaW5pc2hlZCIsInJpZ2h0QmFyVW5maW5pc2hlZCIsInJldHVybkxlZnRCYXIiLCJsZWZ0QmFyRmluaXNoZWQiLCJsZWZ0QmFyVW5maW5pc2hlZCIsImJyZWFkY3J1bWIiLCJncmlkIiwicm93IiwiY29sdW1uIiwic2VnbWVudCIsImJhc2UiLCJhcHBlYXIiLCJlbnRlciIsImxlYXZlIiwicHJvcHMiLCJsYWJlbCIsInByb3BUeXBlcyIsImFjdGl2ZVN0ZXAiLCJQcm9wVHlwZXMiLCJudW1iZXIiLCJpc1JlcXVpcmVkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7O0FBQ0E7Ozs7OztBQUVBLElBQU1BLGVBQWUsU0FBZkEsWUFBZSxDQUFDQyxTQUFELEVBQVlDLEVBQVosRUFBbUI7QUFDdEMsTUFBSUQsWUFBWUMsRUFBaEIsRUFBb0I7QUFDbEIsV0FBTyxPQUFQO0FBQ0QsR0FGRCxNQUVPLElBQUlELGNBQWNDLEVBQWxCLEVBQXNCO0FBQzNCLFdBQU8sVUFBUDtBQUNELEdBRk0sTUFFQSxJQUFJQSxPQUFPLENBQVgsRUFBYztBQUNuQixXQUFPLFNBQVA7QUFDRCxHQUZNLE1BRUEsSUFBSUEsT0FBTyxDQUFYLEVBQWM7QUFDbkIsV0FBTyxnQkFBUDtBQUNELEdBRk0sTUFFQSxJQUFJQSxPQUFPLENBQVgsRUFBYztBQUNuQixXQUFPLFFBQVA7QUFDRCxHQUZNLE1BRUEsSUFBSUEsT0FBTyxDQUFYLEVBQWM7QUFDbkIsV0FBTyxjQUFQO0FBQ0Q7QUFDRCxTQUFPLFFBQVA7QUFD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U0FBWCxHQUF1QjtBQUNyQkMsY0FBWUMsb0JBQVVDLE1BQVYsQ0FBaUJDO0FBRFIsQ0FBdkI7O2tCQUllZixVIiwiZmlsZSI6ImJyZWFkY3J1bWIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFRyYW5zaXRpb24gZnJvbSAncmVhY3QtaW5saW5lLXRyYW5zaXRpb24tZ3JvdXAnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IEdyaWQsIEljb24sIExhYmVsLCBTZWdtZW50IH0gZnJvbSAnc2VtYW50aWMtdWktcmVhY3QnO1xuaW1wb3J0IFN0eWxlcyBmcm9tICcuLi8uLi9zdHlsZXMvYnJlYWRjcnVtYic7XG5cbmNvbnN0IHJldHVyblN0YXR1cyA9IChzZWxlY3Rpb24sIGlkKSA9PiB7XG4gIGlmIChzZWxlY3Rpb24gPiBpZCkge1xuICAgIHJldHVybiAnY2hlY2snO1xuICB9IGVsc2UgaWYgKHNlbGVjdGlvbiA9PT0gaWQpIHtcbiAgICByZXR1cm4gJ3F1ZXN0aW9uJztcbiAgfSBlbHNlIGlmIChpZCA9PT0gMSkge1xuICAgIHJldHVybiAnd3Bmb3Jtcyc7XG4gIH0gZWxzZSBpZiAoaWQgPT09IDIpIHtcbiAgICByZXR1cm4gJ2xvY2F0aW9uIGFycm93JztcbiAgfSBlbHNlIGlmIChpZCA9PT0gMykge1xuICAgIHJldHVybiAnZG9sbGFyJztcbiAgfSBlbHNlIGlmIChpZCA9PT0gNCkge1xuICAgIHJldHVybiAnZWRpdCBvdXRsaW5lJztcbiAgfVxuICByZXR1cm4gJ2NhbmNlbCc7XG59O1xuY29uc3QgcmV0dXJuQ29sb3IgPSAoaWNvbkNvbG9yLCBpZCkgPT4ge1xuICBpZiAoaWNvbkNvbG9yID4gaWQpIHtcbiAgICByZXR1cm4gJ2dyZWVuJztcbiAgfSBlbHNlIGlmIChpY29uQ29sb3IgPT09IGlkKSB7XG4gICAgcmV0dXJuICdibHVlJztcbiAgfVxuICByZXR1cm4gJ2dyZXknO1xufTtcbmNvbnN0IHJldHVybkljb24gPSAoaWNvbiwgaWQpID0+IHtcbiAgaWYgKGljb24gPiBpZCkge1xuICAgIHJldHVybiBTdHlsZXMuZmluaXNoZWRJY29uO1xuICB9IGVsc2UgaWYgKGljb24gPT09IGlkKSB7XG4gICAgcmV0dXJuIFN0eWxlcy5jdXJyZW50SWNvbjtcbiAgfVxuICByZXR1cm4gU3R5bGVzLnVuZmluaXNoZWRJY29uO1xufTtcbmNvbnN0IHJldHVyblJpZ2h0QmFyID0gKGJhciwgaWQpID0+IHtcbiAgaWYgKGJhciA+IGlkKSB7XG4gICAgcmV0dXJuIFN0eWxlcy5yaWdodEJhckZpbmlzaGVkO1xuICB9XG4gIHJldHVybiBTdHlsZXMucmlnaHRCYXJVbmZpbmlzaGVkO1xufTtcbmNvbnN0IHJldHVybkxlZnRCYXIgPSAoYmFyLCBpZCkgPT4ge1xuICBpZiAoYmFyID4gaWQpIHtcbiAgICByZXR1cm4gU3R5bGVzLmxlZnRCYXJGaW5pc2hlZDtcbiAgfVxuICByZXR1cm4gU3R5bGVzLmxlZnRCYXJVbmZpbmlzaGVkO1xufTtcbmV4cG9ydCBjb25zdCBicmVhZGNydW1iID0gcHJvcHMgPT4gKFxuICA8R3JpZCBjb2x1bW5zPVwiZXF1YWxcIiBzdHlsZT17U3R5bGVzLmdyaWR9PlxuICAgIDxHcmlkLlJvdyBzdHlsZT17U3R5bGVzLnJvd30+XG4gICAgICA8R3JpZC5Db2x1bW4gc3R5bGU9e1N0eWxlcy5jb2x1bW59PlxuICAgICAgICA8U2VnbWVudCBzdHlsZT17U3R5bGVzLnNlZ21lbnR9PlxuICAgICAgICAgIDxUcmFuc2l0aW9uXG4gICAgICAgICAgICBjaGlsZHJlblN0eWxlcz17e1xuICAgICAgICAgICAgICBiYXNlOiBTdHlsZXMuYmFzZSxcbiAgICAgICAgICAgICAgYXBwZWFyOiBTdHlsZXMuYXBwZWFyLFxuICAgICAgICAgICAgICBlbnRlcjogU3R5bGVzLmFwcGVhcixcbiAgICAgICAgICAgICAgbGVhdmU6IFN0eWxlcy5sZWF2ZSxcbiAgICAgICAgICAgIH19XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPEljb25cbiAgICAgICAgICAgICAgc3R5bGU9e3JldHVybkljb24ocHJvcHMuaWNvbiwgMCl9XG4gICAgICAgICAgICAgIGNpcmN1bGFyXG4gICAgICAgICAgICAgIHNpemU9XCJsYXJnZVwiXG4gICAgICAgICAgICAgIGNvbG9yPXtyZXR1cm5Db2xvcihwcm9wcy5pY29uQ29sb3IsIDApfVxuICAgICAgICAgICAgICBuYW1lPXtyZXR1cm5TdGF0dXMocHJvcHMuc2VsZWN0aW9uLCAwKX1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9UcmFuc2l0aW9uPlxuICAgICAgICAgIDxkaXYgc3R5bGU9e3JldHVyblJpZ2h0QmFyKHByb3BzLmJhciwgMCl9IC8+XG4gICAgICAgIDwvU2VnbWVudD5cbiAgICAgICAgPFNlZ21lbnQgc3R5bGU9e1N0eWxlcy5zZWdtZW50fT5cbiAgICAgICAgICA8TGFiZWwgc3R5bGU9e1N0eWxlcy5sYWJlbH0+UmVxdWVzdDwvTGFiZWw+XG4gICAgICAgIDwvU2VnbWVudD5cbiAgICAgIDwvR3JpZC5Db2x1bW4+XG4gICAgICA8R3JpZC5Db2x1bW4gc3R5bGU9e1N0eWxlcy5jb2x1bW59PlxuICAgICAgICA8U2VnbWVudCBzdHlsZT17U3R5bGVzLnNlZ21lbnR9PlxuICAgICAgICAgIDxJY29uXG4gICAgICAgICAgICBjaXJjdWxhclxuICAgICAgICAgICAgc2l6ZT1cImxhcmdlXCJcbiAgICAgICAgICAgIHN0eWxlPXtyZXR1cm5JY29uKHByb3BzLmljb24sIDEpfVxuICAgICAgICAgICAgY29sb3I9e3JldHVybkNvbG9yKHByb3BzLmljb25Db2xvciwgMSl9XG4gICAgICAgICAgICBuYW1lPXtyZXR1cm5TdGF0dXMocHJvcHMuc2VsZWN0aW9uLCAxKX1cbiAgICAgICAgICAvPlxuICAgICAgICAgIDxkaXYgc3R5bGU9e3JldHVybkxlZnRCYXIocHJvcHMuYmFyLCAwKX0gLz5cbiAgICAgICAgICA8ZGl2IHN0eWxlPXtyZXR1cm5SaWdodEJhcihwcm9wcy5iYXIsIDEpfSAvPlxuICAgICAgICA8L1NlZ21lbnQ+XG4gICAgICAgIDxTZWdtZW50IHN0eWxlPXtTdHlsZXMuc2VnbWVudH0+XG4gICAgICAgICAgPExhYmVsIHN0eWxlPXtTdHlsZXMubGFiZWx9PkRldGFpbHM8L0xhYmVsPlxuICAgICAgICA8L1NlZ21lbnQ+XG4gICAgICA8L0dyaWQuQ29sdW1uPlxuICAgICAgPEdyaWQuQ29sdW1uIHN0eWxlPXtTdHlsZXMuY29sdW1ufT5cbiAgICAgICAgPFNlZ21lbnQgc3R5bGU9e1N0eWxlcy5zZWdtZW50fT5cbiAgICAgICAgICA8SWNvblxuICAgICAgICAgICAgY2lyY3VsYXJcbiAgICAgICAgICAgIHNpemU9XCJsYXJnZVwiXG4gICAgICAgICAgICBzdHlsZT17cmV0dXJuSWNvbihwcm9wcy5pY29uLCAyKX1cbiAgICAgICAgICAgIGNvbG9yPXtyZXR1cm5Db2xvcihwcm9wcy5pY29uQ29sb3IsIDIpfVxuICAgICAgICAgICAgbmFtZT17cmV0dXJuU3RhdHVzKHByb3BzLnNlbGVjdGlvbiwgMil9XG4gICAgICAgICAgLz5cbiAgICAgICAgICA8ZGl2IHN0eWxlPXtyZXR1cm5MZWZ0QmFyKHByb3BzLmJhciwgMSl9IC8+XG4gICAgICAgICAgPGRpdiBzdHlsZT17cmV0dXJuUmlnaHRCYXIocHJvcHMuYmFyLCAyKX0gLz5cbiAgICAgICAgPC9TZWdtZW50PlxuICAgICAgICA8U2VnbWVudCBzdHlsZT17U3R5bGVzLnNlZ21lbnR9PlxuICAgICAgICAgIDxMYWJlbCBzdHlsZT17U3R5bGVzLmxhYmVsfT5Mb2NhdGlvbjwvTGFiZWw+XG4gICAgICAgIDwvU2VnbWVudD5cbiAgICAgIDwvR3JpZC5Db2x1bW4+XG4gICAgICA8R3JpZC5Db2x1bW4gc3R5bGU9e1N0eWxlcy5jb2x1bW59PlxuICAgICAgICA8U2VnbWVudCBzdHlsZT17U3R5bGVzLnNlZ21lbnR9PlxuICAgICAgICAgIDxJY29uXG4gICAgICAgICAgICBjaXJjdWxhclxuICAgICAgICAgICAgc2l6ZT1cImxhcmdlXCJcbiAgICAgICAgICAgIHN0eWxlPXtyZXR1cm5JY29uKHByb3BzLmljb24sIDMpfVxuICAgICAgICAgICAgY29sb3I9e3JldHVybkNvbG9yKHByb3BzLmljb25Db2xvciwgMyl9XG4gICAgICAgICAgICBuYW1lPXtyZXR1cm5TdGF0dXMocHJvcHMuc2VsZWN0aW9uLCAzKX1cbiAgICAgICAgICAvPlxuICAgICAgICAgIDxkaXYgc3R5bGU9e3JldHVybkxlZnRCYXIocHJvcHMuYmFyLCAyKX0gLz5cbiAgICAgICAgICA8ZGl2IHN0eWxlPXtyZXR1cm5SaWdodEJhcihwcm9wcy5iYXIsIDMpfSAvPlxuICAgICAgICA8L1NlZ21lbnQ+XG4gICAgICAgIDxTZWdtZW50IHN0eWxlPXtTdHlsZXMuc2VnbWVudH0+XG4gICAgICAgICAgPExhYmVsIHN0eWxlPXtTdHlsZXMubGFiZWx9PlByaWNlPC9MYWJlbD5cbiAgICAgICAgPC9TZWdtZW50PlxuICAgICAgPC9HcmlkLkNvbHVtbj5cbiAgICAgIDxHcmlkLkNvbHVtbiBzdHlsZT17U3R5bGVzLmNvbHVtbn0+XG4gICAgICAgIDxTZWdtZW50IHN0eWxlPXtTdHlsZXMuc2VnbWVudH0+XG4gICAgICAgICAgPEljb25cbiAgICAgICAgICAgIGNpcmN1bGFyXG4gICAgICAgICAgICBzaXplPVwibGFyZ2VcIlxuICAgICAgICAgICAgc3R5bGU9e3JldHVybkljb24ocHJvcHMuaWNvbiwgNCl9XG4gICAgICAgICAgICBjb2xvcj17cmV0dXJuQ29sb3IocHJvcHMuaWNvbkNvbG9yLCA0KX1cbiAgICAgICAgICAgIG5hbWU9e3JldHVyblN0YXR1cyhwcm9wcy5zZWxlY3Rpb24sIDQpfVxuICAgICAgICAgIC8+XG4gICAgICAgICAgPGRpdiBzdHlsZT17cmV0dXJuTGVmdEJhcihwcm9wcy5iYXIsIDMpfSAvPlxuICAgICAgICA8L1NlZ21lbnQ+XG4gICAgICAgIDxTZWdtZW50IHN0eWxlPXtTdHlsZXMuc2VnbWVudH0+XG4gICAgICAgICAgPExhYmVsIHN0eWxlPXtTdHlsZXMubGFiZWx9PlJldmlldzwvTGFiZWw+XG4gICAgICAgIDwvU2VnbWVudD5cbiAgICAgIDwvR3JpZC5Db2x1bW4+XG4gICAgPC9HcmlkLlJvdz5cbiAgPC9HcmlkPlxuKTtcblxuYnJlYWRjcnVtYi5wcm9wVHlwZXMgPSB7XG4gIGFjdGl2ZVN0ZXA6IFByb3BUeXBlcy5udW1iZXIuaXNSZXF1aXJlZCxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGJyZWFkY3J1bWI7XG4iXX0=