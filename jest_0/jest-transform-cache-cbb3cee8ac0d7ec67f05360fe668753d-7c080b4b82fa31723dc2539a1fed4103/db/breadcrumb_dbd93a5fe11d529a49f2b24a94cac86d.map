{"version":3,"sources":["breadcrumb.js"],"names":["returnStatus","selection","id","returnColor","iconColor","returnIcon","icon","Styles","finishedIcon","currentIcon","unfinishedIcon","returnRightBar","bar","rightBarFinished","rightBarUnfinished","returnLeftBar","leftBarFinished","leftBarUnfinished","breadcrumb","grid","row","column","segment","base","appear","enter","leave","props","label","propTypes","activeStep","PropTypes","number","isRequired"],"mappings":"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","file":"breadcrumb.js","sourcesContent":["import React from 'react';\nimport Transition from 'react-inline-transition-group';\nimport PropTypes from 'prop-types';\nimport { Grid, Icon, Label, Segment } from 'semantic-ui-react';\nimport Styles from '../../styles/breadcrumb';\n\nconst returnStatus = (selection, id) => {\n  if (selection > id) {\n    return 'check';\n  } else if (selection === id) {\n    return 'question';\n  } else if (id === 1) {\n    return 'wpforms';\n  } else if (id === 2) {\n    return 'location arrow';\n  } else if (id === 3) {\n    return 'dollar';\n  } else if (id === 4) {\n    return 'edit outline';\n  }\n  return 'cancel';\n};\nconst returnColor = (iconColor, id) => {\n  if (iconColor > id) {\n    return 'green';\n  } else if (iconColor === id) {\n    return 'blue';\n  }\n  return 'grey';\n};\nconst returnIcon = (icon, id) => {\n  if (icon > id) {\n    return Styles.finishedIcon;\n  } else if (icon === id) {\n    return Styles.currentIcon;\n  }\n  return Styles.unfinishedIcon;\n};\nconst returnRightBar = (bar, id) => {\n  if (bar > id) {\n    return Styles.rightBarFinished;\n  }\n  return Styles.rightBarUnfinished;\n};\nconst returnLeftBar = (bar, id) => {\n  if (bar > id) {\n    return Styles.leftBarFinished;\n  }\n  return Styles.leftBarUnfinished;\n};\nexport const breadcrumb = props => (\n  <Grid columns=\"equal\" style={Styles.grid}>\n    <Grid.Row style={Styles.row}>\n      <Grid.Column style={Styles.column}>\n        <Segment style={Styles.segment}>\n          <Transition\n            childrenStyles={{\n              base: Styles.base,\n              appear: Styles.appear,\n              enter: Styles.appear,\n              leave: Styles.leave,\n            }}\n          >\n            <Icon\n              style={returnIcon(props.icon, 0)}\n              circular\n              size=\"large\"\n              color={returnColor(props.iconColor, 0)}\n              name={returnStatus(props.selection, 0)}\n            />\n          </Transition>\n          <div style={returnRightBar(props.bar, 0)} />\n        </Segment>\n        <Segment style={Styles.segment}>\n          <Label style={Styles.label}>Request</Label>\n        </Segment>\n      </Grid.Column>\n      <Grid.Column style={Styles.column}>\n        <Segment style={Styles.segment}>\n          <Icon\n            circular\n            size=\"large\"\n            style={returnIcon(props.icon, 1)}\n            color={returnColor(props.iconColor, 1)}\n            name={returnStatus(props.selection, 1)}\n          />\n          <div style={returnLeftBar(props.bar, 0)} />\n          <div style={returnRightBar(props.bar, 1)} />\n        </Segment>\n        <Segment style={Styles.segment}>\n          <Label style={Styles.label}>Details</Label>\n        </Segment>\n      </Grid.Column>\n      <Grid.Column style={Styles.column}>\n        <Segment style={Styles.segment}>\n          <Icon\n            circular\n            size=\"large\"\n            style={returnIcon(props.icon, 2)}\n            color={returnColor(props.iconColor, 2)}\n            name={returnStatus(props.selection, 2)}\n          />\n          <div style={returnLeftBar(props.bar, 1)} />\n          <div style={returnRightBar(props.bar, 2)} />\n        </Segment>\n        <Segment style={Styles.segment}>\n          <Label style={Styles.label}>Location</Label>\n        </Segment>\n      </Grid.Column>\n      <Grid.Column style={Styles.column}>\n        <Segment style={Styles.segment}>\n          <Icon\n            circular\n            size=\"large\"\n            style={returnIcon(props.icon, 3)}\n            color={returnColor(props.iconColor, 3)}\n            name={returnStatus(props.selection, 3)}\n          />\n          <div style={returnLeftBar(props.bar, 2)} />\n          <div style={returnRightBar(props.bar, 3)} />\n        </Segment>\n        <Segment style={Styles.segment}>\n          <Label style={Styles.label}>Price</Label>\n        </Segment>\n      </Grid.Column>\n      <Grid.Column style={Styles.column}>\n        <Segment style={Styles.segment}>\n          <Icon\n            circular\n            size=\"large\"\n            style={returnIcon(props.icon, 4)}\n            color={returnColor(props.iconColor, 4)}\n            name={returnStatus(props.selection, 4)}\n          />\n          <div style={returnLeftBar(props.bar, 3)} />\n        </Segment>\n        <Segment style={Styles.segment}>\n          <Label style={Styles.label}>Review</Label>\n        </Segment>\n      </Grid.Column>\n    </Grid.Row>\n  </Grid>\n);\n\nbreadcrumb.propTypes = {\n  activeStep: PropTypes.number.isRequired,\n};\n\nexport default breadcrumb;\n"]}