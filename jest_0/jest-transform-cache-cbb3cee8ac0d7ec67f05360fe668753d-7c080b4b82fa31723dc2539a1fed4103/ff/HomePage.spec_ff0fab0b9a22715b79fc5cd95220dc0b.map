{"version":3,"sources":["HomePage.spec.js"],"names":["describe","wrapper","chance","renderComponent","props","setEmail","jest","fn","setPassword","setFirstName","setLastName","setPasswordRepeat","setAddress","setCity","setAddressState","setZipcode","openLoginModal","closeLoginModal","isLoginModalOpen","bool","openSignupModal","closeSignupModal","isSignupModalOpen","beforeEach","Chance","childAt","it","expect","type","toEqual","navbar","Menu","secondary","toBeTruthy","loginSignupButtonContainer","position","loginModal","Modal","size","mockCloseLoginModal","loginModalOnCloseHandler","onClose","toHaveBeenCalledTimes","closeIcon","loginModalTrigger","trigger","expectedType","mockOpenLoginModal","loginModalTriggerOnClickHandler","onClick","loginModalTriggerText","text","loginModalHeader","Header","loginModalHeaderText","loginModalDescription","Description","loginModalDescriptionGrid","Grid","loginModalDescriptionGridRows","children","forEach","row","Row","loginButtonRow","centered"],"mappings":"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","file":"HomePage.spec.js","sourcesContent":["import { shallow } from 'enzyme';\nimport { Menu, Modal, Grid } from 'semantic-ui-react';\nimport chance from 'chance';\nimport React from 'react';\nimport HomePage from '../../../src/components/pages/HomePage';\n\ndescribe('Home Page', () => {\n  let wrapper,\n    chance;\n\n  const renderComponent = (props = {}) =>\n    shallow(\n      <HomePage\n        setEmail={props.setEmail || jest.fn()}\n        setPassword={props.setPassword || jest.fn()}\n        setFirstName={props.setFirstName || jest.fn()}\n        setLastName={props.setLastName || jest.fn()}\n        setPasswordRepeat={props.setPasswordRepeat || jest.fn()}\n        setAddress={props.setAddress || jest.fn()}\n        setCity={props.setCity || jest.fn()}\n        setAddressState={props.setAddressState || jest.fn()}\n        setZipcode={props.setZipcode || jest.fn()}\n        openLoginModal={props.openLoginModal || jest.fn()}\n        closeLoginModal={props.closeLoginModal || jest.fn()}\n        isLoginModalOpen={props.isLoginModalOpen || chance.bool()}\n        openSignupModal={props.openSignupModal || jest.fn()}\n        closeSignupModal={props.closeSignupModal || jest.fn()}\n        isSignupModalOpen={props.isSignupModalOpen || chance.bool()}\n      />,\n    );\n\n  beforeEach(() => {\n    chance = Chance();\n    wrapper = renderComponent().childAt(0);\n  });\n\n  it('is wrapped in a div', () => {\n    expect(wrapper.type()).toEqual('div');\n  });\n\n  describe('Navbar', () => {\n    let navbar;\n\n    beforeEach(() => {\n      navbar = wrapper.childAt(0);\n    });\n\n    it('is a menu', () => {\n      expect(navbar.type()).toEqual(Menu);\n    });\n\n    it('is styled as a secondary menu', () => {\n      expect(navbar.props().secondary).toBeTruthy();\n    });\n\n    describe('Login/Signup button container', () => {\n      let loginSignupButtonContainer;\n\n      beforeEach(() => {\n        loginSignupButtonContainer = navbar.childAt(0);\n      });\n\n      it('is a menu subcomponent', () => {\n        expect(loginSignupButtonContainer.type()).toEqual(Menu.Menu);\n      });\n\n      it('is positioned correctly', () => {\n        expect(loginSignupButtonContainer.props().position).toEqual('right');\n      });\n\n      describe('Login Modal', () => {\n        let loginModal;\n\n        beforeEach(() => {\n          loginModal = loginSignupButtonContainer.childAt(0);\n        });\n\n        it('is a modal', () => {\n          expect(loginModal.type()).toEqual(Modal);\n        });\n\n        it('is a mini modal', () => {\n          expect(loginModal.props().size).toEqual('mini');\n        });\n\n        it('closes the model when closed', () => {\n          const mockCloseLoginModal = jest.fn();\n\n          wrapper = renderComponent({\n            closeLoginModal: mockCloseLoginModal,\n          }).childAt(0);\n          navbar = wrapper.childAt(0);\n          loginSignupButtonContainer = navbar.childAt(0);\n          loginModal = loginSignupButtonContainer.childAt(0);\n\n          const loginModalOnCloseHandler = loginModal.props().onClose;\n\n          loginModalOnCloseHandler();\n\n          expect(mockCloseLoginModal).toHaveBeenCalledTimes(1);\n        });\n\n        it('displays a close modal button', () => {\n          expect(loginModal.props().closeIcon).toBeTruthy();\n        });\n\n        describe('Login Modal trigger', () => {\n          let loginModalTrigger;\n\n          beforeEach(() => {\n            loginModalTrigger = shallow(loginModal.props().trigger);\n          });\n\n          it('is a menu item', () => {\n            const expectedType = shallow(<Menu.Item onClick={jest.fn()} />).type();\n\n            expect(loginModalTrigger.type()).toEqual(expectedType);\n          });\n\n          it('opens the modal when clicked', () => {\n            const mockOpenLoginModal = jest.fn();\n\n            wrapper = renderComponent({\n              openLoginModal: mockOpenLoginModal,\n            }).childAt(0);\n            navbar = wrapper.childAt(0);\n            loginSignupButtonContainer = navbar.childAt(0);\n            loginModal = loginSignupButtonContainer.childAt(0);\n            loginModalTrigger = shallow(loginModal.props().trigger);\n\n            const loginModalTriggerOnClickHandler = loginModalTrigger.props().onClick;\n\n            loginModalTriggerOnClickHandler();\n\n            expect(mockOpenLoginModal).toHaveBeenCalledTimes(1);\n          });\n\n          it('displays the correct word', () => {\n            const loginModalTriggerText = loginModalTrigger.childAt(0);\n\n            expect(loginModalTriggerText.text()).toEqual('Login');\n          });\n        });\n\n        describe('Login Modal Header', () => {\n          let loginModalHeader;\n\n          beforeEach(() => {\n            loginModalHeader = loginModal.childAt(0);\n          });\n\n          it('is a modal header', () => {\n            expect(loginModalHeader.type()).toEqual(Modal.Header);\n          });\n\n          it('displays the correct text', () => {\n            const loginModalHeaderText = loginModalHeader.childAt(0);\n\n            expect(loginModalHeaderText.text()).toEqual('Welcome Back!');\n          });\n        });\n\n        describe('Login Modal Description', () => {\n          let loginModalDescription;\n\n          beforeEach(() => {\n            loginModalDescription = loginModal.childAt(1);\n          });\n\n          it('is a modal description', () => {\n            expect(loginModalDescription.type()).toEqual(Modal.Description);\n          });\n\n          describe('Login Modal Description Grid', () => {\n            let loginModalDescriptionGrid;\n\n            beforeEach(() => {\n              loginModalDescriptionGrid = loginModalDescription.childAt(0);\n            });\n\n            it('is a grid', () => {\n              expect(loginModalDescriptionGrid.type()).toEqual(Grid);\n            });\n\n            it('contains three rows', () => {\n              const loginModalDescriptionGridRows = loginModalDescriptionGrid.children();\n\n              loginModalDescriptionGridRows.forEach((row) => {\n                expect(row.type()).toEqual(Grid.Row);\n              });\n            });\n\n            it('contains a row for the login button that is centered', () => {\n              const loginButtonRow = loginModalDescriptionGrid.childAt(2);\n\n              expect(loginButtonRow.props().centered).toBeTruthy();\n            });\n          });\n        });\n      });\n    });\n  });\n});\n"]}