{"version":3,"sources":["breadcrumb.js"],"names":["returnStatus","selection","id","returnColor","iconColor","returnIcon","icon","Styles","finishedIcon","currentIcon","unfinishedIcon","returnRightBar","bar","rightBarFinished","rightBarUnfinished","returnLeftBar","leftBarFinished","leftBarUnfinished","returnLabel","label","currentLabel","breadcrumb","grid","row","column","segment","props","propTypes","PropTypes","number","isRequired"],"mappings":"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","file":"breadcrumb.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, Icon, Label, Segment } from 'semantic-ui-react';\nimport Styles from '../../styles/breadcrumb';\n\nconst returnStatus = (selection, id) => {\n  if (selection > id) {\n    return 'check';\n  } else if (selection === id) {\n    return 'question';\n  } else if (id === 1) {\n    return 'wpforms';\n  } else if (id === 2) {\n    return 'location arrow';\n  } else if (id === 3) {\n    return 'dollar';\n  } else if (id === 4) {\n    return 'pencil';\n  }\n  return 'cancel';\n};\nconst returnColor = (iconColor, id) => {\n  if (iconColor > id) {\n    return 'green';\n  } else if (iconColor === id) {\n    return 'blue';\n  }\n  return 'grey';\n};\nconst returnIcon = (icon, id) => {\n  if (icon > id) {\n    return Styles.finishedIcon;\n  } else if (icon === id) {\n    return Styles.currentIcon;\n  }\n  return Styles.unfinishedIcon;\n};\nconst returnRightBar = (bar, id) => {\n  if (bar > id) {\n    return Styles.rightBarFinished;\n  }\n  return Styles.rightBarUnfinished;\n};\nconst returnLeftBar = (bar, id) => {\n  if (bar > id) {\n    return Styles.leftBarFinished;\n  }\n  return Styles.leftBarUnfinished;\n};\nconst returnLabel = (label, id) => {\n  if (label === id) {\n    return Styles.currentLabel;\n  }\n  return Styles.label;\n};\nexport const breadcrumb = props => (\n  <Grid columns=\"equal\" style={Styles.grid}>\n    <Grid.Row style={Styles.row}>\n      <Grid.Column style={Styles.column}>\n        <Segment style={Styles.segment}>\n          <Icon\n            style={returnIcon(props.selection, 0)}\n            circular\n            size=\"large\"\n            color={returnColor(props.selection, 0)}\n            name={returnStatus(props.selection, 0)}\n          />\n          <div style={returnRightBar(props.selection, 0)} />\n        </Segment>\n        <Segment style={Styles.segment}>\n          <Label style={returnLabel(props.selection, 0)}>Request</Label>\n        </Segment>\n      </Grid.Column>\n      <Grid.Column style={Styles.column}>\n        <Segment style={Styles.segment}>\n          <Icon\n            circular\n            size=\"large\"\n            style={returnIcon(props.selection, 1)}\n            color={returnColor(props.selection, 1)}\n            name={returnStatus(props.selection, 1)}\n          />\n          <div style={returnLeftBar(props.selection, 0)} />\n          <div style={returnRightBar(props.selection, 1)} />\n        </Segment>\n        <Segment style={Styles.segment}>\n          <Label style={returnLabel(props.selection, 1)}>Details</Label>\n        </Segment>\n      </Grid.Column>\n      <Grid.Column style={Styles.column}>\n        <Segment style={Styles.segment}>\n          <Icon\n            circular\n            size=\"large\"\n            style={returnIcon(props.selection, 2)}\n            color={returnColor(props.selection, 2)}\n            name={returnStatus(props.selection, 2)}\n          />\n          <div style={returnLeftBar(props.selection, 1)} />\n          <div style={returnRightBar(props.selection, 2)} />\n        </Segment>\n        <Segment style={Styles.segment}>\n          <Label style={returnLabel(props.selection, 2)}>Location</Label>\n        </Segment>\n      </Grid.Column>\n      <Grid.Column style={Styles.column}>\n        <Segment style={Styles.segment}>\n          <Icon\n            circular\n            size=\"large\"\n            style={returnIcon(props.selection, 3)}\n            color={returnColor(props.selection, 3)}\n            name={returnStatus(props.selection, 3)}\n          />\n          <div style={returnLeftBar(props.selection, 2)} />\n          <div style={returnRightBar(props.selection, 3)} />\n        </Segment>\n        <Segment style={Styles.segment}>\n          <Label style={returnLabel(props.selection, 3)}>Price</Label>\n        </Segment>\n      </Grid.Column>\n      <Grid.Column style={Styles.column}>\n        <Segment style={Styles.segment}>\n          <Icon\n            circular\n            size=\"large\"\n            style={returnIcon(props.selection, 4)}\n            color={returnColor(props.selection, 4)}\n            name={returnStatus(props.selection, 4)}\n          />\n          <div style={returnLeftBar(props.selection, 3)} />\n        </Segment>\n        <Segment style={Styles.segment}>\n          <Label style={returnLabel(props.selection, 4)}>Review</Label>\n        </Segment>\n      </Grid.Column>\n    </Grid.Row>\n  </Grid>\n);\n\nbreadcrumb.propTypes = {\n  selection: PropTypes.number.isRequired,\n};\n\nexport default breadcrumb;\n"]}