{"version":3,"sources":["ConnectedRequestLocation.spec.js"],"names":["describe","store","beforeEach","state","mockStore","it","wrapper","dispatchProps","forEach","prop","expect","props","toEqual","any","Function"],"mappings":";;AAAA;;;;AACA;;AACA;;;;AACA;;;;;;AAEAA,SAAS,gCAAT,EAA2C,YAAM;AAC/C,MAAIC,cAAJ;;AAEAC,aAAW,YAAM;AACf,QAAMC,QAAQ,EAAd;;AAEA,QAAMC,YAAY,+BAAlB;AACAH,YAAQG,UAAUD,KAAV,CAAR;AACD,GALD;;AAOAE,KAAG,uBAAH,EAA4B,YAAM;AAChC,QAAMC,UAAU,qBAAQ,8BAAC,kCAAD,IAAiB,OAAOL,KAAxB,GAAR,CAAhB;;AAEA,QAAMM,gBAAgB,CAAC,oBAAD,CAAtB;;AAEAA,kBAAcC,OAAd,CAAsB,UAACC,IAAD,EAAU;AAC9BC,aAAOJ,QAAQK,KAAR,GAAgBF,IAAhB,CAAP,EAA8BG,OAA9B,CAAsCF,OAAOG,GAAP,CAAWC,QAAX,CAAtC;AACD,KAFD;AAGD,GARD;AASD,CAnBD","file":"ConnectedRequestLocation.spec.js","sourcesContent":["import React from 'react';\nimport { shallow } from 'enzyme';\nimport configureStore from 'redux-mock-store';\nimport RequestLocation from '../../src/connectedComponents/ConnectedRequestLocation';\n\ndescribe('Connected RequestLocation Page', () => {\n  let store;\n\n  beforeEach(() => {\n    const state = {};\n\n    const mockStore = configureStore();\n    store = mockStore(state);\n  });\n\n  it('has the correct props', () => {\n    const wrapper = shallow(<RequestLocation store={store} />);\n\n    const dispatchProps = ['setRequestLocation'];\n\n    dispatchProps.forEach((prop) => {\n      expect(wrapper.props()[prop]).toEqual(expect.any(Function));\n    });\n  });\n});\n"]}