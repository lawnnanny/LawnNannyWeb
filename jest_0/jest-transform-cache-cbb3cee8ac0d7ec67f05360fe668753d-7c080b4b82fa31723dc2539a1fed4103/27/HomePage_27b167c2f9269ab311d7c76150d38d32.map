{"version":3,"sources":["HomePage.js"],"names":["HomePage","setEmail","setPassword","setFirstName","setLastName","setPasswordRepeat","setAddress","setCity","setAddressState","setZipcode","openLoginModal","closeModal","isLoginModalOpen","openSignupModal","isSignupModalOpen","Styles","navbarContainer","loginSignupMenu","modal","menuItem","modalHeader","loginGrid","modalButton","signUpForm","statekeys","signUpCheckbox","header","pipelineButton","propTypes","PropTypes","func","isRequired","bool","defaultProps"],"mappings":"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","file":"HomePage.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Menu, Modal, Input, Grid, Button, Form } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\nimport Styles from '../../styles/HomePage';\nimport { statekeys } from '../../helpers/Common';\n\nconst HomePage = ({\n  setEmail,\n  setPassword,\n  setFirstName,\n  setLastName,\n  setPasswordRepeat,\n  setAddress,\n  setCity,\n  setAddressState,\n  setZipcode,\n  openLoginModal,\n  closeModal,\n  isLoginModalOpen,\n  openSignupModal,\n  isSignupModalOpen,\n}) => (\n  <div>\n    <div style={Styles.navbarContainer}>\n      <Menu secondary style={Styles.loginSignupMenu}>\n        <Menu.Menu position=\"right\">\n          <Modal\n            style={Styles.modal}\n            size=\"mini\"\n            trigger={\n              <Menu.Item style={Styles.menuItem} onClick={openLoginModal}>\n                Login\n              </Menu.Item>\n            }\n            open={isLoginModalOpen}\n            onClose={closeModal}\n            closeIcon\n          >\n            <Modal.Header style={Styles.modalHeader}>Welcome Back!</Modal.Header>\n            <Modal.Description>\n              <Grid style={Styles.loginGrid}>\n                <Grid.Row>\n                  <Grid.Column>\n                    <Input\n                      fluid\n                      icon=\"user\"\n                      iconPosition=\"left\"\n                      placeholder=\"someone@example.com\"\n                      onChange={setEmail}\n                    />\n                  </Grid.Column>\n                </Grid.Row>\n                <Grid.Row>\n                  <Grid.Column>\n                    <Input\n                      fluid\n                      icon=\"lock\"\n                      type=\"password\"\n                      iconPosition=\"left\"\n                      placeholder=\"Password\"\n                      onChange={setPassword}\n                    />\n                  </Grid.Column>\n                </Grid.Row>\n                <Grid.Row centered>\n                  <Grid.Column width={6}>\n                    <Button style={Styles.modalButton} size=\"large\" onClick={closeModal}>\n                      Login\n                    </Button>\n                  </Grid.Column>\n                </Grid.Row>\n              </Grid>\n            </Modal.Description>\n          </Modal>\n          <Modal\n            style={Styles.modal}\n            size=\"tiny\"\n            trigger={\n              <Menu.Item style={Styles.menuItem} onClick={openSignupModal}>\n                Sign Up\n              </Menu.Item>\n            }\n            open={isSignupModalOpen}\n            onClose={closeModal}\n            closeIcon\n          >\n            <Modal.Header style={Styles.modalHeader}>Sign Up!</Modal.Header>\n            <Modal.Description>\n              <Form style={Styles.signUpForm}>\n                <Form.Group widths=\"equal\">\n                  <Form.Input\n                    fluid\n                    label=\"First Name\"\n                    color=\"white\"\n                    placeholder=\"First Name\"\n                    onChange={setFirstName}\n                  />\n                  <Form.Input\n                    fluid\n                    label=\"Last Name\"\n                    placeholder=\"Last Name\"\n                    onChange={setLastName}\n                  />\n                </Form.Group>\n                <Form.Group widths=\"equal\">\n                  <Form.Input\n                    fluid\n                    label=\"Email\"\n                    placeholder=\"someone@example.com\"\n                    onChange={setEmail}\n                  />\n                </Form.Group>\n                <Form.Group widths=\"equal\">\n                  <Form.Input\n                    fluid\n                    label=\"Password\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    onChange={setPassword}\n                  />\n                  <Form.Input\n                    fluid\n                    label=\"Repeat Password\"\n                    type=\"password\"\n                    placeholder=\"Repeat Password\"\n                    onChange={setPasswordRepeat}\n                  />\n                </Form.Group>\n                <Form.Group widths=\"equal\">\n                  <Form.Input fluid label=\"Address\" placeholder=\"Address\" onChange={setAddress} />\n                  <Form.Input fluid label=\"City\" placeholder=\"City\" onChange={setCity} />\n                </Form.Group>\n                <Form.Group widths=\"equal\">\n                  <Form.Dropdown\n                    fluid\n                    label=\"State\"\n                    placeholder=\"State\"\n                    search\n                    selection\n                    options={statekeys}\n                    onChange={setAddressState}\n                  />\n                  <Form.Input fluid label=\"Zipcode\" placeholder=\"Zipcode\" onChange={setZipcode} />\n                </Form.Group>\n                <Form.Group style={Styles.signUpCheckbox}>\n                  <Form.Checkbox label=\"I agree to the Terms and Conditions\" />\n                </Form.Group>\n                <Form.Group>\n                  <Form.Button style={Styles.modalButton} size=\"large\" onClick={closeModal}>\n                    Submit\n                  </Form.Button>\n                </Form.Group>\n              </Form>\n            </Modal.Description>\n          </Modal>\n        </Menu.Menu>\n      </Menu>\n    </div>\n    <Grid style={Styles.header} centered padded relaxed>\n      <Grid.Row />\n      <Grid.Row>\n        <Link to=\"/pipeline\">\n          <Button style={Styles.pipelineButton} size=\"large\">\n            Make a Request\n          </Button>\n        </Link>\n      </Grid.Row>\n      <Grid.Row />\n    </Grid>\n  </div>\n);\n\nHomePage.propTypes = {\n  setEmail: PropTypes.func.isRequired,\n  setPassword: PropTypes.func.isRequired,\n  setFirstName: PropTypes.func.isRequired,\n  setLastName: PropTypes.func.isRequired,\n  setPasswordRepeat: PropTypes.func.isRequired,\n  setAddress: PropTypes.func.isRequired,\n  setCity: PropTypes.func.isRequired,\n  setAddressState: PropTypes.func.isRequired,\n  setZipcode: PropTypes.func.isRequired,\n  openLoginModal: PropTypes.func.isRequired,\n  closeModal: PropTypes.func.isRequired,\n  isSignupModalOpen: PropTypes.bool.isRequired,\n  isLoginModalOpen: PropTypes.bool.isRequired,\n  openSignupModal: PropTypes.func.isRequired,\n};\n\nHomePage.defaultProps = {};\n\nexport default HomePage;\n"]}