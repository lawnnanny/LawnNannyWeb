170e45e5d939595099cf8d8a1cbd7827
'use strict';

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _semanticUiReact = require('semantic-ui-react');

var _enzyme = require('enzyme');

var _requestLocation = require('../../../../src/components/pages/pipeline/requestLocation');

var _requestLocation2 = _interopRequireDefault(_requestLocation);

var _breadcrumb = require('../../../../src/components/helpers/breadcrumb');

var _breadcrumb2 = _interopRequireDefault(_breadcrumb);

var _DynamicForm = require('../../../../src/components/helpers/DynamicForm');

var _DynamicForm2 = _interopRequireDefault(_DynamicForm);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

describe('RequestInformation', function () {
  var wrapper = void 0;

  var renderComponent = function renderComponent() {
    return (0, _enzyme.shallow)(_react2.default.createElement(_requestLocation2.default, { typeOfRequest: 'Lawn Mowing' }));
  };

  beforeEach(function () {
    wrapper = renderComponent();
  });

  it('is wrapped in a Grid Container', function () {
    expect(wrapper.type()).toEqual(_semanticUiReact.Grid);
  });

  it('is styled as a container Grid', function () {
    expect(wrapper.props().container).toBeTruthy();
  });

  it('contains two rows', function () {
    expect.assertions(2);

    var GridRows = wrapper.children();

    GridRows.forEach(function (row) {
      expect(row.type()).toEqual(_semanticUiReact.Grid.Row);
    });
  });

  describe('BreadcrumbRow', function () {
    var BreadcrumbRow = void 0;

    beforeEach(function () {
      BreadcrumbRow = wrapper.childAt(0);
    });

    it('is a Breadcrumb Row', function () {
      expect(BreadcrumbRow.type()).toEqual(_semanticUiReact.Grid.Row);
    });

    describe('BreadcrumbSegment', function () {
      var BreadcrumbSegment = void 0;

      beforeEach(function () {
        BreadcrumbSegment = BreadcrumbRow.childAt(0);
      });

      it('is a Breadcrumb Segment', function () {
        expect(BreadcrumbSegment.type()).toEqual(_semanticUiReact.Segment);
      });

      describe('BreadcrumbComponent', function () {
        var Breadcrumb = void 0;

        beforeEach(function () {
          Breadcrumb = BreadcrumbSegment.childAt(0);
        });

        it('is a breadcrumb', function () {
          expect(Breadcrumb.type()).toEqual(_breadcrumb2.default);
        });
        it('has a selection', function () {
          expect(Breadcrumb.props().selection).toEqual(2);
        });
      });
    });
  });

  describe('FormRow', function () {
    var FormRow = void 0;

    beforeEach(function () {
      FormRow = wrapper.childAt(1);
    });

    it('is a Form Row', function () {
      expect(FormRow.type()).toEqual(_semanticUiReact.Grid.Row);
    });

    describe('FormSegment', function () {
      var FormSegment = void 0;

      beforeEach(function () {
        FormSegment = FormRow.childAt(0);
      });

      it('is a Form Segment', function () {
        expect(FormSegment.type()).toEqual(_semanticUiReact.Segment);
      });

      describe('form', function () {
        var form = void 0;
        beforeEach(function () {
          form = FormSegment.childAt(0);
        });

        it('is a Form', function () {
          expect(form.type()).toEqual(_DynamicForm2.default);
        });
        it('has a form', function () {
          expect(form.props().form).toBeTruthy();
        });
        it('has a route', function () {
          expect(form.props().route).toBeTruthy();
        });
      });
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlcXVlc3RMb2NhdGlvbi5zcGVjLmpzIl0sIm5hbWVzIjpbImRlc2NyaWJlIiwid3JhcHBlciIsInJlbmRlckNvbXBvbmVudCIsImJlZm9yZUVhY2giLCJpdCIsImV4cGVjdCIsInR5cGUiLCJ0b0VxdWFsIiwiR3JpZCIsInByb3BzIiwiY29udGFpbmVyIiwidG9CZVRydXRoeSIsImFzc2VydGlvbnMiLCJHcmlkUm93cyIsImNoaWxkcmVuIiwiZm9yRWFjaCIsInJvdyIsIlJvdyIsIkJyZWFkY3J1bWJSb3ciLCJjaGlsZEF0IiwiQnJlYWRjcnVtYlNlZ21lbnQiLCJTZWdtZW50IiwiQnJlYWRjcnVtYiIsIkJyZWFkY3J1bWJDb21wb25lbnQiLCJzZWxlY3Rpb24iLCJGb3JtUm93IiwiRm9ybVNlZ21lbnQiLCJmb3JtIiwiRHluYW1pY0Zvcm1Db21wb25lbnQiLCJyb3V0ZSJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7OztBQUNBOztBQUNBOztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7Ozs7O0FBRUFBLFNBQVMsb0JBQVQsRUFBK0IsWUFBTTtBQUNuQyxNQUFJQyxnQkFBSjs7QUFFQSxNQUFNQyxrQkFBa0IsU0FBbEJBLGVBQWtCO0FBQUEsV0FBTSxxQkFBUSw4QkFBQyx5QkFBRCxJQUEwQixlQUFjLGFBQXhDLEdBQVIsQ0FBTjtBQUFBLEdBQXhCOztBQUVBQyxhQUFXLFlBQU07QUFDZkYsY0FBVUMsaUJBQVY7QUFDRCxHQUZEOztBQUlBRSxLQUFHLGdDQUFILEVBQXFDLFlBQU07QUFDekNDLFdBQU9KLFFBQVFLLElBQVIsRUFBUCxFQUF1QkMsT0FBdkIsQ0FBK0JDLHFCQUEvQjtBQUNELEdBRkQ7O0FBSUFKLEtBQUcsK0JBQUgsRUFBb0MsWUFBTTtBQUN4Q0MsV0FBT0osUUFBUVEsS0FBUixHQUFnQkMsU0FBdkIsRUFBa0NDLFVBQWxDO0FBQ0QsR0FGRDs7QUFJQVAsS0FBRyxtQkFBSCxFQUF3QixZQUFNO0FBQzVCQyxXQUFPTyxVQUFQLENBQWtCLENBQWxCOztB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O0FBZ0JELEtBM0JEO0FBNEJELEdBdkNEO0FBd0NELENBMUdEIiwiZmlsZSI6InJlcXVlc3RMb2NhdGlvbi5zcGVjLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IEdyaWQsIFNlZ21lbnQgfSBmcm9tICdzZW1hbnRpYy11aS1yZWFjdCc7XG5pbXBvcnQgeyBzaGFsbG93IH0gZnJvbSAnZW56eW1lJztcbmltcG9ydCBSZXF1ZXN0TG9jYXRpb25Db21wb25lbnQgZnJvbSAnLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvcGFnZXMvcGlwZWxpbmUvcmVxdWVzdExvY2F0aW9uJztcbmltcG9ydCBCcmVhZGNydW1iQ29tcG9uZW50IGZyb20gJy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2hlbHBlcnMvYnJlYWRjcnVtYic7XG5pbXBvcnQgRHluYW1pY0Zvcm1Db21wb25lbnQgZnJvbSAnLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvaGVscGVycy9EeW5hbWljRm9ybSc7XG5cbmRlc2NyaWJlKCdSZXF1ZXN0SW5mb3JtYXRpb24nLCAoKSA9PiB7XG4gIGxldCB3cmFwcGVyO1xuXG4gIGNvbnN0IHJlbmRlckNvbXBvbmVudCA9ICgpID0+IHNoYWxsb3coPFJlcXVlc3RMb2NhdGlvbkNvbXBvbmVudCB0eXBlT2ZSZXF1ZXN0PVwiTGF3biBNb3dpbmdcIiAvPik7XG5cbiAgYmVmb3JlRWFjaCgoKSA9PiB7XG4gICAgd3JhcHBlciA9IHJlbmRlckNvbXBvbmVudCgpO1xuICB9KTtcblxuICBpdCgnaXMgd3JhcHBlZCBpbiBhIEdyaWQgQ29udGFpbmVyJywgKCkgPT4ge1xuICAgIGV4cGVjdCh3cmFwcGVyLnR5cGUoKSkudG9FcXVhbChHcmlkKTtcbiAgfSk7XG5cbiAgaXQoJ2lzIHN0eWxlZCBhcyBhIGNvbnRhaW5lciBHcmlkJywgKCkgPT4ge1xuICAgIGV4cGVjdCh3cmFwcGVyLnByb3BzKCkuY29udGFpbmVyKS50b0JlVHJ1dGh5KCk7XG4gIH0pO1xuXG4gIGl0KCdjb250YWlucyB0d28gcm93cycsICgpID0+IHtcbiAgICBleHBlY3QuYXNzZXJ0aW9ucygyKTtcblxuICAgIGNvbnN0IEdyaWRSb3dzID0gd3JhcHBlci5jaGlsZHJlbigpO1xuXG4gICAgR3JpZFJvd3MuZm9yRWFjaCgocm93KSA9PiB7XG4gICAgICBleHBlY3Qocm93LnR5cGUoKSkudG9FcXVhbChHcmlkLlJvdyk7XG4gICAgfSk7XG4gIH0pO1xuXG4gIGRlc2NyaWJlKCdCcmVhZGNydW1iUm93JywgKCkgPT4ge1xuICAgIGxldCBCcmVhZGNydW1iUm93O1xuXG4gICAgYmVmb3JlRWFjaCgoKSA9PiB7XG4gICAgICBCcmVhZGNydW1iUm93ID0gd3JhcHBlci5jaGlsZEF0KDApO1xuICAgIH0pO1xuXG4gICAgaXQoJ2lzIGEgQnJlYWRjcnVtYiBSb3cnLCAoKSA9PiB7XG4gICAgICBleHBlY3QoQnJlYWRjcnVtYlJvdy50eXBlKCkpLnRvRXF1YWwoR3JpZC5Sb3cpO1xuICAgIH0pO1xuXG4gICAgZGVzY3JpYmUoJ0JyZWFkY3J1bWJTZWdtZW50JywgKCkgPT4ge1xuICAgICAgbGV0IEJyZWFkY3J1bWJTZWdtZW50O1xuXG4gICAgICBiZWZvcmVFYWNoKCgpID0+IHtcbiAgICAgICAgQnJlYWRjcnVtYlNlZ21lbnQgPSBCcmVhZGNydW1iUm93LmNoaWxkQXQoMCk7XG4gICAgICB9KTtcblxuICAgICAgaXQoJ2lzIGEgQnJlYWRjcnVtYiBTZWdtZW50JywgKCkgPT4ge1xuICAgICAgICBleHBlY3QoQnJlYWRjcnVtYlNlZ21lbnQudHlwZSgpKS50b0VxdWFsKFNlZ21lbnQpO1xuICAgICAgfSk7XG5cbiAgICAgIGRlc2NyaWJlKCdCcmVhZGNydW1iQ29tcG9uZW50JywgKCkgPT4ge1xuICAgICAgICBsZXQgQnJlYWRjcnVtYjtcblxuICAgICAgICBiZWZvcmVFYWNoKCgpID0+IHtcbiAgICAgICAgICBCcmVhZGNydW1iID0gQnJlYWRjcnVtYlNlZ21lbnQuY2hpbGRBdCgwKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgaXQoJ2lzIGEgYnJlYWRjcnVtYicsICgpID0+IHtcbiAgICAgICAgICBleHBlY3QoQnJlYWRjcnVtYi50eXBlKCkpLnRvRXF1YWwoQnJlYWRjcnVtYkNvbXBvbmVudCk7XG4gICAgICAgIH0pO1xuICAgICAgICBpdCgnaGFzIGEgc2VsZWN0aW9uJywgKCkgPT4ge1xuICAgICAgICAgIGV4cGVjdChCcmVhZGNydW1iLnByb3BzKCkuc2VsZWN0aW9uKS50b0VxdWFsKDIpO1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9KTtcblxuICBkZXNjcmliZSgnRm9ybVJvdycsICgpID0+IHtcbiAgICBsZXQgRm9ybVJvdztcblxuICAgIGJlZm9yZUVhY2goKCkgPT4ge1xuICAgICAgRm9ybVJvdyA9IHdyYXBwZXIuY2hpbGRBdCgxKTtcbiAgICB9KTtcblxuICAgIGl0KCdpcyBhIEZvcm0gUm93JywgKCkgPT4ge1xuICAgICAgZXhwZWN0KEZvcm1Sb3cudHlwZSgpKS50b0VxdWFsKEdyaWQuUm93KTtcbiAgICB9KTtcblxuICAgIGRlc2NyaWJlKCdGb3JtU2VnbWVudCcsICgpID0+IHtcbiAgICAgIGxldCBGb3JtU2VnbWVudDtcblxuICAgICAgYmVmb3JlRWFjaCgoKSA9PiB7XG4gICAgICAgIEZvcm1TZWdtZW50ID0gRm9ybVJvdy5jaGlsZEF0KDApO1xuICAgICAgfSk7XG5cbiAgICAgIGl0KCdpcyBhIEZvcm0gU2VnbWVudCcsICgpID0+IHtcbiAgICAgICAgZXhwZWN0KEZvcm1TZWdtZW50LnR5cGUoKSkudG9FcXVhbChTZWdtZW50KTtcbiAgICAgIH0pO1xuXG4gICAgICBkZXNjcmliZSgnZm9ybScsICgpID0+IHtcbiAgICAgICAgbGV0IGZvcm07XG4gICAgICAgIGJlZm9yZUVhY2goKCkgPT4ge1xuICAgICAgICAgIGZvcm0gPSBGb3JtU2VnbWVudC5jaGlsZEF0KDApO1xuICAgICAgICB9KTtcblxuICAgICAgICBpdCgnaXMgYSBGb3JtJywgKCkgPT4ge1xuICAgICAgICAgIGV4cGVjdChmb3JtLnR5cGUoKSkudG9FcXVhbChEeW5hbWljRm9ybUNvbXBvbmVudCk7XG4gICAgICAgIH0pO1xuICAgICAgICBpdCgnaGFzIGEgZm9ybScsICgpID0+IHtcbiAgICAgICAgICBleHBlY3QoZm9ybS5wcm9wcygpLmZvcm0pLnRvQmVUcnV0aHkoKTtcbiAgICAgICAgfSk7XG4gICAgICAgIGl0KCdoYXMgYSByb3V0ZScsICgpID0+IHtcbiAgICAgICAgICBleHBlY3QoZm9ybS5wcm9wcygpLnJvdXRlKS50b0JlVHJ1dGh5KCk7XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH0pO1xufSk7XG4iXX0=