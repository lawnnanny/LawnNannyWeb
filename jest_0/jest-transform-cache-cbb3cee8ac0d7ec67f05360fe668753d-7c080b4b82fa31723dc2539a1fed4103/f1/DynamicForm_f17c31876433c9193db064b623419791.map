{"version":3,"sources":["DynamicForm.js"],"names":["DynamicForm","props","onSubmit","data","state","Requests","form","fields","forEach","element","type","field","id","entry","dataForSubmitting","validation","validateAndSetStateErrorsForDisplay","setRequest","route","errors","Object","values","validationEntryObject","trim","length","setState","keys","processChange","key","handle","e","value","addAstricks","errorProperty","error","backgroundColor","defaultRender","comboRowStyle","label","name","renderInput","Styles","placeholder","InLineErrorInput","renderDropDown","statekeys","InLineErrorDropdown","renderTextArea","InLineErrorTextArea","renderCheckbox","renderRadio","renderRadioButtons","options","renderRowFromJson","style","group","renderFormFromJson","margin","padding","radioButtons","map","option","subForm","formUI","jsonForm","segment","button","React","Component","propTypes","PropTypes","func","isRequired","string"],"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","file":"DynamicForm.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  Header,\n  Input,\n  Button,\n  Segment,\n  Checkbox,\n  TextArea,\n  Dropdown,\n} from 'semantic-ui-react';\nimport { statekeys } from '../../helpers/Common';\nimport Styles from '../../styles/DynamicForm';\nimport InlineError from './InlineError';\n\nclass DynamicForm extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      errors: {},\n      dataForSubmitting: {},\n      Requests: props.jsonForm(),\n    };\n  }\n\n  onSubmit = () => {\n    const data = {};\n    this.state.Requests[this.props.form].fields.forEach((element) => {\n      if (element.type === 'rowCombination') {\n        element.fields.forEach((field) => {\n          data[field.id] = {\n            entry: this.state.dataForSubmitting[field.id],\n            validation: field.validation,\n            id: field.id,\n            type: field.type,\n          };\n        });\n      } else {\n        data[element.id] = {\n          entry: this.state.dataForSubmitting[element.id],\n          validation: element.validation,\n          id: element.id,\n          type: element.type,\n        };\n      }\n    });\n    if (this.validateAndSetStateErrorsForDisplay(data)) {\n      this.props.setRequest(data);\n      this.props.route();\n    }\n  };\n\n  validateAndSetStateErrorsForDisplay = (data) => {\n    const errors = {};\n    Object.values(data).forEach((validationEntryObject) => {\n      if (validationEntryObject.validation === 'required') {\n        if (!validationEntryObject.entry || !validationEntryObject.entry.trim().length) {\n          switch (validationEntryObject.type) {\n            case 'textArea':\n              errors[validationEntryObject.id] = 'Empty Text Box';\n              break;\n            case 'input':\n              errors[validationEntryObject.id] = 'Field is Required';\n              break;\n            case 'dropDown':\n              errors[validationEntryObject.id] = 'Nothing is Selected';\n              break;\n            case 'radio':\n              errors[validationEntryObject.id] = 'Selection is Required';\n              break;\n            case 'checkbox':\n              errors[validationEntryObject.id] = 'Selection is Required';\n              break;\n            default:\n          }\n        }\n      }\n    });\n    this.setState({ errors });\n    return !Object.keys(errors).length;\n  };\n\n  processChange = (key) => {\n    const handle = (e, { value }) => {\n      const state = this.state;\n      state.dataForSubmitting[key] = value;\n      this.setState(state);\n    };\n    return handle;\n  };\n\n  addAstricks = (validation) => {\n    if (validation) {\n      return ' * ';\n    }\n    return '';\n  };\n\n  errorProperty = (error) => {\n    if (error) {\n      return { backgroundColor: '#F8C3B6' };\n    }\n    return {};\n  }\n\n  defaultRender = (field, comboRowStyle, errors) => (\n    <Form.Field>\n      <label style={comboRowStyle.label} htmlFor={field.id}>\n        {this.addAstricks(field.validation) + field.name}\n      </label>\n      <Input error={errors[field.id]} id={field.id} onChange={this.processChange(field.id)} />\n      {errors[field.id] && <InlineError text={errors[field.id]} />}\n    </Form.Field>\n  )\n\n  renderInput = (field, comboRowStyle, errors) => (\n    <Form.Field style={Styles.field}>\n      <label style={comboRowStyle.label} htmlFor={field.id}>\n        {this.addAstricks(field.validation) + field.name}\n      </label>\n      <Form.Input\n        error={errors[field.id]}\n        onChange={this.processChange(field.id)}\n        placeholder={field.placeholder}\n      />\n      <div style={Styles.InLineErrorInput}>\n        {errors[field.id] && <InlineError text={errors[field.id]} pointing />}\n      </div>\n    </Form.Field>\n  );\n\n  renderDropDown = (field, comboRowStyle, errors) => (\n    <Form.Field style={Styles.field}>\n      <label style={comboRowStyle.label} htmlFor={field.id}>\n        {this.addAstricks(field.validation) + field.name}\n      </label>\n      <Dropdown\n        search\n        error={errors[field.id]}\n        value={this.state[field.id]}\n        onChange={this.processChange(field.id)}\n        id={field.id}\n        placeholder={field.placeholder}\n        options={statekeys}\n        fluid\n        selection\n      />\n      <div style={Styles.InLineErrorDropdown}>\n        {errors[field.id] && <InlineError text={errors[field.id]} pointing />}\n      </div>\n    </Form.Field>\n  )\n\n  renderTextArea = (field, comboRowStyle, errors) => (\n    <Form.Field style={Styles.field}>\n      <label style={comboRowStyle.label} htmlFor={field.id}>\n        {this.addAstricks(field.validation) + field.name}\n      </label>\n      <TextArea\n        style={this.errorProperty(errors[field.id])}\n        error={errors[field.id]}\n        id={field.id}\n        placeholder={field.placeholder}\n        onChange={this.processChange(field.id)}\n      />\n      <div style={Styles.InLineErrorTextArea}>\n        {errors[field.id] && <InlineError text={errors[field.id]} pointing />}\n      </div>\n    </Form.Field>\n  )\n\n  renderCheckbox = (field, comboRowStyle, errors) => (\n    <Form.Field style={Styles.field}>\n      <label style={comboRowStyle.label} htmlFor={field.id}>\n        {this.addAstricks(field.validation) + field.name}\n      </label>\n      <Checkbox error={errors[field.id]} name={field.name} onChange={this.processChange(field.id)} value=\"true\" />\n      {errors[field.id] && <InlineError text={errors[field.id]} pointing=\"left\" />}\n    </Form.Field>\n  )\n\n  renderRadio = (field, comboRowStyle, errors) => (\n    <Form.Field style={Styles.field}>\n      <label style={comboRowStyle.label} htmlFor={field.id}>\n        {this.addAstricks(field.validation) + field.name}\n      </label>\n      <Form.Group id={field.id} inline>\n        {this.renderRadioButtons(field.id, field.options)}\n        {errors[field.id] && <InlineError text={errors[field.id]} />}\n      </Form.Group>\n    </Form.Field>\n  )\n\n  renderRowFromJson = (field, style, errors) => (\n    <Form.Group width={field.fields.length} style={Styles.group}>\n      {this.renderFormFromJson(\n        field,\n        {\n          label: {\n            margin: '1em 1em 0em 0em', padding: '1em 1em 0em 0em',\n          },\n        },\n        errors)\n      }\n    </Form.Group>\n  )\n\n  renderRadioButtons = (id, field) => {\n    const radioButtons = field.map(option => (\n      <Form.Radio\n        label={option}\n        value={option}\n        onChange={this.processChange(id)}\n        checked={this.state.dataForSubmitting[id] === option}\n      />\n    ));\n    return radioButtons;\n  };\n\n  renderFormFromJson = (subForm, comboRowStyle, errors) => {\n    const formUI = subForm.fields.map((field) => {\n      switch (field.type) {\n        case 'input':\n          return this.renderInput(field, comboRowStyle, errors);\n        case 'rowCombination':\n          return this.renderRowFromJson(field, comboRowStyle, errors);\n        case 'dropDown':\n          return this.renderDropDown(field, comboRowStyle, errors);\n        case 'textArea':\n          return this.renderTextArea(field, comboRowStyle, errors);\n        case 'checkbox':\n          return this.renderCheckbox(field, comboRowStyle, errors);\n        case 'radio':\n          return this.renderRadio(field, comboRowStyle, errors);\n        default:\n          return this.defaultRender(field, comboRowStyle, errors);\n      }\n    });\n    return formUI;\n  };\n\n  render() {\n    return (\n      <Segment padded style={Styles.segment}>\n        <Header size=\"large\">{this.props.form}</Header>\n        <Form onSubmit={this.onSubmit}>\n          <Segment style={Styles.segment}>\n            {this.renderFormFromJson(\n              this.state.Requests[this.props.form],\n              { label: {} },\n              this.state.errors,\n            )}\n          </Segment>\n          <Segment style={Styles.segment}>\n            <Button type=\"submit\" fluid positive size=\"large\" style={Styles.button}>\n              Continue\n            </Button>\n          </Segment>\n        </Form>\n      </Segment>\n    );\n  }\n}\n\nDynamicForm.propTypes = {\n  jsonForm: PropTypes.func.isRequired,\n  form: PropTypes.string.isRequired,\n  setRequest: PropTypes.func.isRequired,\n  route: PropTypes.func.isRequired,\n};\n\nexport default DynamicForm;\n"]}