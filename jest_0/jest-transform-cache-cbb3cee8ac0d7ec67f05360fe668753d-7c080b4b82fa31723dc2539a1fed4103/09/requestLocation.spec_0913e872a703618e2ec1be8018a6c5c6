fe3d0f0903f26a5a99a09ad88ba62fd3
'use strict';

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _semanticUiReact = require('semantic-ui-react');

var _enzyme = require('enzyme');

var _requestLocation = require('../../../../src/components/pages/pipeline/requestLocation');

var _requestLocation2 = _interopRequireDefault(_requestLocation);

var _breadcrumb = require('../../../../src/components/helpers/breadcrumb');

var _breadcrumb2 = _interopRequireDefault(_breadcrumb);

var _DynamicForm = require('../../../../src/components/helpers/DynamicForm');

var _DynamicForm2 = _interopRequireDefault(_DynamicForm);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

describe('RequestInformation', function () {
  var wrapper = void 0;

  var renderComponent = function renderComponent() {
    return (0, _enzyme.shallow)(_react2.default.createElement(_requestLocation2.default, { typeOfRequest: 'Lawn Mowing' }));
  };

  beforeEach(function () {
    wrapper = renderComponent();
  });

  it('is wrapped in a Grid Container', function () {
    expect(wrapper.type()).toEqual(_semanticUiReact.Grid);
  });

  it('is styled as a container Grid', function () {
    expect(wrapper.props().container).toBeTruthy();
  });

  it('contains two rows', function () {
    expect.assertions(2);

    var GridRows = wrapper.children();

    GridRows.forEach(function (row) {
      expect(row.type()).toEqual(_semanticUiReact.Grid.Row);
    });
  });

  describe('BreadcrumbRow', function () {
    var BreadcrumbRow = void 0;

    beforeEach(function () {
      BreadcrumbRow = wrapper.childAt(0);
    });

    it('is a Breadcrumb Row', function () {
      expect(BreadcrumbRow.type()).toEqual(_semanticUiReact.Grid.Row);
    });

    describe('BreadcrumbSegment', function () {
      var BreadcrumbSegment = void 0;

      beforeEach(function () {
        BreadcrumbSegment = BreadcrumbRow.childAt(0);
      });

      it('is a Breadcrumb Segment', function () {
        expect(BreadcrumbSegment.type()).toEqual(_semanticUiReact.Segment);
      });

      describe('BreadcrumbComponent', function () {
        var Breadcrumb = void 0;

        beforeEach(function () {
          Breadcrumb = BreadcrumbSegment.childAt(0);
        });

        it('is a breadcrumb', function () {
          expect(Breadcrumb.type()).toEqual(_breadcrumb2.default);
        });
        it('has an active step', function () {
          expect(Breadcrumb.props().activeStep).toEqual(2);
        });
      });
    });
  });

  describe('FormRow', function () {
    var FormRow = void 0;

    beforeEach(function () {
      FormRow = wrapper.childAt(1);
    });

    it('is a Form Row', function () {
      expect(FormRow.type()).toEqual(_semanticUiReact.Grid.Row);
    });

    describe('FormSegment', function () {
      var FormSegment = void 0;

      beforeEach(function () {
        FormSegment = FormRow.childAt(0);
      });

      it('is a Form Segment', function () {
        expect(FormSegment.type()).toEqual(_semanticUiReact.Segment);
      });

      describe('form', function () {
        var form = void 0;
        beforeEach(function () {
          form = FormSegment.childAt(0);
        });

        it('is a Form', function () {
          expect(form.type()).toEqual(_DynamicForm2.default);
        });
        it('has the correct requestType', function () {
          expect(form.props().requestType).toEqual('Location');
        });
        it('has the correct requestForm', function () {
          expect(form.props().requestForm).toEqual('address');
        });
      });
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlcXVlc3RMb2NhdGlvbi5zcGVjLmpzIl0sIm5hbWVzIjpbImRlc2NyaWJlIiwid3JhcHBlciIsInJlbmRlckNvbXBvbmVudCIsImJlZm9yZUVhY2giLCJpdCIsImV4cGVjdCIsInR5cGUiLCJ0b0VxdWFsIiwiR3JpZCIsInByb3BzIiwiY29udGFpbmVyIiwidG9CZVRydXRoeSIsImFzc2VydGlvbnMiLCJHcmlkUm93cyIsImNoaWxkcmVuIiwiZm9yRWFjaCIsInJvdyIsIlJvdyIsIkJyZWFkY3J1bWJSb3ciLCJjaGlsZEF0IiwiQnJlYWRjcnVtYlNlZ21lbnQiLCJTZWdtZW50IiwiQnJlYWRjcnVtYiIsIkJyZWFkY3J1bWJDb21wb25lbnQiLCJhY3RpdmVTdGVwIiwiRm9ybVJvdyIsIkZvcm1TZWdtZW50IiwiZm9ybSIsIkR5bmFtaWNGb3JtQ29tcG9uZW50IiwicmVxdWVzdFR5cGUiLCJyZXF1ZXN0Rm9ybSJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7OztBQUNBOztBQUNBOztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7Ozs7O0FBRUFBLFNBQVMsb0JBQVQsRUFBK0IsWUFBTTtBQUNuQyxNQUFJQyxnQkFBSjs7QUFFQSxNQUFNQyxrQkFBa0IsU0FBbEJBLGVBQWtCO0FBQUEsV0FBTSxxQkFBUSw4QkFBQyx5QkFBRCxJQUEwQixlQUFjLGFBQXhDLEdBQVIsQ0FBTjtBQUFBLEdBQXhCOztBQUVBQyxhQUFXLFlBQU07QUFDZkYsY0FBVUMsaUJBQVY7QUFDRCxHQUZEOztBQUlBRSxLQUFHLGdDQUFILEVBQXFDLFlBQU07QUFDekNDLFdBQU9KLFFBQVFLLElBQVIsRUFBUCxFQUF1QkMsT0FBdkIsQ0FBK0JDLHFCQUEvQjtBQUNELEdBRkQ7O0FBSUFKLEtBQUcsK0JBQUgsRUFBb0MsWUFBTTtBQUN4Q0MsV0FBT0osUUFBUVEsS0FBUixHQUFnQkMsU0FBdkIsRUFBa0NDLFVBQWxDO0FBQ0QsR0FGRDs7QUFJQVAsS0FBRyxtQkFBSCxFQUF3QixZQUFNO0FBQzVCQyxXQUFP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QixFQUFpQ3ZCLE9BQWpDLENBQXlDLFNBQXpDO0FBQ0QsU0FGRDtBQUdELE9BZkQ7QUFnQkQsS0EzQkQ7QUE0QkQsR0F2Q0Q7QUF3Q0QsQ0ExR0QiLCJmaWxlIjoicmVxdWVzdExvY2F0aW9uLnNwZWMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgR3JpZCwgU2VnbWVudCB9IGZyb20gJ3NlbWFudGljLXVpLXJlYWN0JztcbmltcG9ydCB7IHNoYWxsb3cgfSBmcm9tICdlbnp5bWUnO1xuaW1wb3J0IFJlcXVlc3RMb2NhdGlvbkNvbXBvbmVudCBmcm9tICcuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9wYWdlcy9waXBlbGluZS9yZXF1ZXN0TG9jYXRpb24nO1xuaW1wb3J0IEJyZWFkY3J1bWJDb21wb25lbnQgZnJvbSAnLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvaGVscGVycy9icmVhZGNydW1iJztcbmltcG9ydCBEeW5hbWljRm9ybUNvbXBvbmVudCBmcm9tICcuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9oZWxwZXJzL0R5bmFtaWNGb3JtJztcblxuZGVzY3JpYmUoJ1JlcXVlc3RJbmZvcm1hdGlvbicsICgpID0+IHtcbiAgbGV0IHdyYXBwZXI7XG5cbiAgY29uc3QgcmVuZGVyQ29tcG9uZW50ID0gKCkgPT4gc2hhbGxvdyg8UmVxdWVzdExvY2F0aW9uQ29tcG9uZW50IHR5cGVPZlJlcXVlc3Q9XCJMYXduIE1vd2luZ1wiIC8+KTtcblxuICBiZWZvcmVFYWNoKCgpID0+IHtcbiAgICB3cmFwcGVyID0gcmVuZGVyQ29tcG9uZW50KCk7XG4gIH0pO1xuXG4gIGl0KCdpcyB3cmFwcGVkIGluIGEgR3JpZCBDb250YWluZXInLCAoKSA9PiB7XG4gICAgZXhwZWN0KHdyYXBwZXIudHlwZSgpKS50b0VxdWFsKEdyaWQpO1xuICB9KTtcblxuICBpdCgnaXMgc3R5bGVkIGFzIGEgY29udGFpbmVyIEdyaWQnLCAoKSA9PiB7XG4gICAgZXhwZWN0KHdyYXBwZXIucHJvcHMoKS5jb250YWluZXIpLnRvQmVUcnV0aHkoKTtcbiAgfSk7XG5cbiAgaXQoJ2NvbnRhaW5zIHR3byByb3dzJywgKCkgPT4ge1xuICAgIGV4cGVjdC5hc3NlcnRpb25zKDIpO1xuXG4gICAgY29uc3QgR3JpZFJvd3MgPSB3cmFwcGVyLmNoaWxkcmVuKCk7XG5cbiAgICBHcmlkUm93cy5mb3JFYWNoKChyb3cpID0+IHtcbiAgICAgIGV4cGVjdChyb3cudHlwZSgpKS50b0VxdWFsKEdyaWQuUm93KTtcbiAgICB9KTtcbiAgfSk7XG5cbiAgZGVzY3JpYmUoJ0JyZWFkY3J1bWJSb3cnLCAoKSA9PiB7XG4gICAgbGV0IEJyZWFkY3J1bWJSb3c7XG5cbiAgICBiZWZvcmVFYWNoKCgpID0+IHtcbiAgICAgIEJyZWFkY3J1bWJSb3cgPSB3cmFwcGVyLmNoaWxkQXQoMCk7XG4gICAgfSk7XG5cbiAgICBpdCgnaXMgYSBCcmVhZGNydW1iIFJvdycsICgpID0+IHtcbiAgICAgIGV4cGVjdChCcmVhZGNydW1iUm93LnR5cGUoKSkudG9FcXVhbChHcmlkLlJvdyk7XG4gICAgfSk7XG5cbiAgICBkZXNjcmliZSgnQnJlYWRjcnVtYlNlZ21lbnQnLCAoKSA9PiB7XG4gICAgICBsZXQgQnJlYWRjcnVtYlNlZ21lbnQ7XG5cbiAgICAgIGJlZm9yZUVhY2goKCkgPT4ge1xuICAgICAgICBCcmVhZGNydW1iU2VnbWVudCA9IEJyZWFkY3J1bWJSb3cuY2hpbGRBdCgwKTtcbiAgICAgIH0pO1xuXG4gICAgICBpdCgnaXMgYSBCcmVhZGNydW1iIFNlZ21lbnQnLCAoKSA9PiB7XG4gICAgICAgIGV4cGVjdChCcmVhZGNydW1iU2VnbWVudC50eXBlKCkpLnRvRXF1YWwoU2VnbWVudCk7XG4gICAgICB9KTtcblxuICAgICAgZGVzY3JpYmUoJ0JyZWFkY3J1bWJDb21wb25lbnQnLCAoKSA9PiB7XG4gICAgICAgIGxldCBCcmVhZGNydW1iO1xuXG4gICAgICAgIGJlZm9yZUVhY2goKCkgPT4ge1xuICAgICAgICAgIEJyZWFkY3J1bWIgPSBCcmVhZGNydW1iU2VnbWVudC5jaGlsZEF0KDApO1xuICAgICAgICB9KTtcblxuICAgICAgICBpdCgnaXMgYSBicmVhZGNydW1iJywgKCkgPT4ge1xuICAgICAgICAgIGV4cGVjdChCcmVhZGNydW1iLnR5cGUoKSkudG9FcXVhbChCcmVhZGNydW1iQ29tcG9uZW50KTtcbiAgICAgICAgfSk7XG4gICAgICAgIGl0KCdoYXMgYW4gYWN0aXZlIHN0ZXAnLCAoKSA9PiB7XG4gICAgICAgICAgZXhwZWN0KEJyZWFkY3J1bWIucHJvcHMoKS5hY3RpdmVTdGVwKS50b0VxdWFsKDIpO1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9KTtcblxuICBkZXNjcmliZSgnRm9ybVJvdycsICgpID0+IHtcbiAgICBsZXQgRm9ybVJvdztcblxuICAgIGJlZm9yZUVhY2goKCkgPT4ge1xuICAgICAgRm9ybVJvdyA9IHdyYXBwZXIuY2hpbGRBdCgxKTtcbiAgICB9KTtcblxuICAgIGl0KCdpcyBhIEZvcm0gUm93JywgKCkgPT4ge1xuICAgICAgZXhwZWN0KEZvcm1Sb3cudHlwZSgpKS50b0VxdWFsKEdyaWQuUm93KTtcbiAgICB9KTtcblxuICAgIGRlc2NyaWJlKCdGb3JtU2VnbWVudCcsICgpID0+IHtcbiAgICAgIGxldCBGb3JtU2VnbWVudDtcblxuICAgICAgYmVmb3JlRWFjaCgoKSA9PiB7XG4gICAgICAgIEZvcm1TZWdtZW50ID0gRm9ybVJvdy5jaGlsZEF0KDApO1xuICAgICAgfSk7XG5cbiAgICAgIGl0KCdpcyBhIEZvcm0gU2VnbWVudCcsICgpID0+IHtcbiAgICAgICAgZXhwZWN0KEZvcm1TZWdtZW50LnR5cGUoKSkudG9FcXVhbChTZWdtZW50KTtcbiAgICAgIH0pO1xuXG4gICAgICBkZXNjcmliZSgnZm9ybScsICgpID0+IHtcbiAgICAgICAgbGV0IGZvcm07XG4gICAgICAgIGJlZm9yZUVhY2goKCkgPT4ge1xuICAgICAgICAgIGZvcm0gPSBGb3JtU2VnbWVudC5jaGlsZEF0KDApO1xuICAgICAgICB9KTtcblxuICAgICAgICBpdCgnaXMgYSBGb3JtJywgKCkgPT4ge1xuICAgICAgICAgIGV4cGVjdChmb3JtLnR5cGUoKSkudG9FcXVhbChEeW5hbWljRm9ybUNvbXBvbmVudCk7XG4gICAgICAgIH0pO1xuICAgICAgICBpdCgnaGFzIHRoZSBjb3JyZWN0IHJlcXVlc3RUeXBlJywgKCkgPT4ge1xuICAgICAgICAgIGV4cGVjdChmb3JtLnByb3BzKCkucmVxdWVzdFR5cGUpLnRvRXF1YWwoJ0xvY2F0aW9uJyk7XG4gICAgICAgIH0pO1xuICAgICAgICBpdCgnaGFzIHRoZSBjb3JyZWN0IHJlcXVlc3RGb3JtJywgKCkgPT4ge1xuICAgICAgICAgIGV4cGVjdChmb3JtLnByb3BzKCkucmVxdWVzdEZvcm0pLnRvRXF1YWwoJ2FkZHJlc3MnKTtcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfSk7XG59KTtcbiJdfQ==